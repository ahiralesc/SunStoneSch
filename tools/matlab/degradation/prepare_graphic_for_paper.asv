    % Acknowledge:
    %           Andrei Tchernykh (chernykh@cicese.mx)
    %           José Luis González García (jlgonzal@cicese.mx, mabentwickeltsich@gmail.com)
    % Functions and files created by:
    %           José Luis González García (jlgonzal@cicese.mx, mabentwickeltsich@gmail.com)


function prepare_graphic_for_paper(handles, graphic_type, total_number_of_graphics, number_of_experiments, list_of_directories_with_data, criterion_to_graphic, node_flag, allocation_flag, sub_legend)
%  NOTE: The parameters for each graphic prostprocessing function MUST BE
%  the parameters recived by this function in the same order



    %  Get the name of the graphic
    titulo1 = get (handles.edit_graphic_name, 'String');
    %  Get the path to save the graphic
    ruta = get (handles.edit_save_path, 'String');
    %  Get the title of the graphic
    titulo2_ing = regexprep(handles.execution_file_headers{list_of_directories_with_data(1), criterion_to_graphic}{3, 1}, '_', ' ');
    %  Get the size of array
    number_of_directories_with_data = length(list_of_directories_with_data);


    %  Get the number of columns of data
    if node_flag
        if allocation_flag
            number_of_columns_of_data = handles.allocation_file_headers{list_of_directories_with_data(1), criterion_to_graphic}{4, 1};
        else
            number_of_columns_of_data = handles.execution_file_headers{list_of_directories_with_data(1), criterion_to_graphic}{4, 1};
        end
    else
        number_of_columns_of_data = number_of_directories_with_data;
    end



    % Inicia: Estándar para gráficas de resultados de experimentos
    legend('off');
    set(gca,'xlim',[0.6 1.4]);
    posicion = get(gcf, 'Position');
    set(gcf, 'Position', [posicion(1) posicion(2) 500 500]);
    set(gca, 'FontName', 'Times New Roman');
    set(gca, 'FontSize', 10);
    
    %  Asigna las etiquetas de los ejes y el título a las gráficas
    title([regexprep(titulo1, '_', '\\_')]);
    xlabel({'' '' '' '' '' '' '' '' '' '' '' '' '' '' '' '' 'Strategy'});
    ylabel(titulo2_ing);

    %  Calcular posición x de las etiquetas
    reference_position = 0;
    switch number_of_columns_of_data
        case 1
            reference_position = .50;
        case 2
            reference_position = .56;
        case 3
            reference_position = .67;
        case 4
            reference_position = .72;
        case 5
            reference_position = .77;
        otherwise
            reference_position = .80;
    end
    bar_separation = reference_position / number_of_columns_of_data;
    bar_first_position = 1 - (bar_separation * number_of_columns_of_data / 2) + bar_separation / 2 + .008;
    xtick_positions=zeros(1, number_of_columns_of_data);
    xtick_labels= cell(1, number_of_columns_of_data);
    for j = 1 : number_of_columns_of_data
        xtick_positions(j) = bar_first_position + (j - 1) * bar_separation;
        %xtick_labels{1, j} = [num2str((j - 1) * 10) '%'];
        if node_flag
            xtick_labels{1, j} = [sub_legend, handles.directories_list(list_of_directories_with_data(1)).name ': Node ' num2str(j, '%1.0f')];
        else
            xtick_labels{1, j} = [sub_legend, handles.directories_list(list_of_directories_with_data(j)).name];
        end
    end
    
    %  Calcula la posición y de las etiquetas
    y_limits = ylim;
    yposition = (y_limits(1) - y_limits(2))/10;
    xtick_ypositions=repmat(yposition, number_of_columns_of_data, 1);

    %  Crea las etiquetas verticales de las gráficas
    set(gca,'XTick',xtick_positions,'XTickLabel','')
    text(xtick_positions, xtick_ypositions, xtick_labels,'HorizontalAlignment','Right','Rotation', 90, 'FontName', 'Times New Roman', 'FontSize', 10, 'Interpreter', 'none');
    
    %  Guarda la gráfica como bmp
    saveas(gca, [ruta titulo1 ' - ' titulo2_ing '.bmp'], 'bmp');
    
    % Termina: Estándar para gráficas de resultados de experimentos

end
